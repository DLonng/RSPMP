#--------------------------------- 基础参数 ------------------------------------
# 这个在程序中用于 CMU 的轨迹采样 dt = 10HZ 5HZ = 0.1s 0.2s
# 是否需要与 Process 的循环周期保持一致呢？应该不用
HZ: 10
robot_frame: base_link
using_cmu_dynamic_window: true
# 只有配置为 true 才会丢弃轨迹
# 如果不丢弃轨迹，为了保证不碰到障碍物必须确保 sem_gain 大于 goal_gain
# 如果设置丢弃轨迹，不管目标系数设置多大，都不会选择有障碍物点的轨迹
abandon_untrave_traj: false
# 只有一条轨迹上的障碍物点多余 2/4/6/8/10? 个才认为是要丢弃的轨迹
# 为了解决误差导致的错误障碍物体素
untrave_point_num: 5
# 1 / 3 = 0.5, 2 / 3 = 0.66, 3 / 4 = 0.75, 4 / 5 = 0.8
# 不使用
untrave_point_scale: 0.75

#--------------------------------- DWA 代价函数参数 ------------------------------------
# 尽量选择语义代价比较低的区域行驶
# 实际导航过程中，语义代价系数要设置比目标代价系数高
# 因为避障优于最短路径
# 0.45
sem_gain: 0.6

# 10.0 尽量选择离目标点比较近的轨迹
# 寻路模式：设置为 0，并且禁用发送目标模式
# 使用 dwa 轨迹末端点计算距离，到达目标点会减速
# 使用 cmu 轨迹末端点计算距离，因为 cmu 相邻轨迹的末端点非常接近，导致距离目标点的代价也接近
# 进而会导致在 2 个 dwa 轨迹中不断选择，影响加速
# 1.0
goal_gain: 0.4

# 两者组合作为目标代价函数
# 使用 dwa 轨迹末端点计算航向会减速，使用 cmu 轨迹末端点计算航向不会减速，
# 但是 dwa 的原始计算方法会偏离目标点，另一种方法不会减速
# 1.0 1.0
speed_gain: 0.0

# 0.06
heading_gain: 0.0

# 尽量选择角速度小的轨迹，防止转弯弧度过大，先禁用
# 如果设置的参数很大，小车会选择中间的直线轨迹行驶
# 该参数设为 1.0，语义增益可能需要设置很大才能避开障碍物，否则会选择靠近障碍物的轨迹
# 做单项实验不使用该参数
# 更换目标代价函数后，该参数是否需要？
# 0.006
yawrate_gain: 0.0

# 尽量避开障碍物，先禁用
obs_gain: 0.0

#--------------------------------- CMU 轨迹采样参数 ------------------------------------
# SemDWA 的 CMU 轨迹内部计算速度: res / dt = 0.14m / 0.1s = 1.4m / s
cmu_max_vel: 0.5
# 15 度 = 0.26 rad, 20 度 = 0.35 rad, 25 度 = 0.43 rad
# 30 度 = 0.52 rad, 40 度 = 0.70 rad, 50 度 = 0.88 rad
cmu_max_yaw: 0.26
# 1 度 = 0.017 rad
# 0.5 度 = 0.0085
# 0.2 度 = 0.0034
# 0.1 度 = 0.0017
# 因为计算了宽度轨迹，所以角速度分辨率不用很小
cmu_yaw_res: 0.0085

# traj point size = 80 可能需要加长，但是不能超过 octomap_generator.max_range = 6.0, 10.0, 12.0
# 轨迹长度加长，可以提前避障
cmu_traj_len: 5.0

# 是否动态增加语义轨迹的长度
calc_cmu_traj_len: false
max_sem_traj_yawrate: 0.7
#--------------------------------- DWA 轨迹采样参数 ------------------------------------
min_velocity: 0.05
# scout: 1.5
max_velocity: 0.6

# scout: 0.5
max_yawrate: 0.5
# scout: 1.0 -> 2.0 2.5 3.0
max_acceleration: 1.0
# scout: 1.5
max_d_yawrate: 1.5

# 0.06， 0.04， 0.03
# 0.07 0.08 0.09 0.1
velocity_resolution: 0.04
# 0.06 -> 0.03
# 越小轨迹越多，越密集
# 0.02
yawrate_resolution: 0.06

# 除以 2 是实际采样的时间数
predict_time: 10.0

target_velocity: 0.5
#--------------------------------- 语义代价函数避障参数 ------------------------------------
# mini: 0.585
# scout: 0.699
car_width: 0.699
# 当前水平采样车身宽度的 7 条轨迹，轨迹间隔由车身宽度计算
shift_traj_num: 7

#--------------------------------- Raycast 障碍物避障参数 ------------------------------------
# scout: 0.465
# mini: 0.313
car_rad: 0.313
# 0.0087 x (180 / 3.14) = 0.50 度
angle_resolution: 0.0087
# 必须大于最长的采样轨迹
# 设置为等于 octomap_generator.max_range
max_dist: 6.0



